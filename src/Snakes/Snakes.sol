// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

contract Snakes {
    bool public solved = false;

    function solve(bytes memory code) public {
      bytes memory data = hex"6106c9610011610000396106c9610000f360003560e01c6002600c820660011b6106b101601e39600051565b636e6ecf9681186102b8576044361034176106ac5760043560040160208135116106ac57803560208160051b01808360403750505060405160208160051b018061046082604060045afa50505061053961088052611ca36108a05260496108c05260256108e0526104d2610900526110e1610920526000600f905b806109405261046051601f81116106ac576109405161094051600681069050600581116106ac5760051b610880015161094051188082028115838383041417156106ac579050905061094051600281018181106106ac579050600381169050600581116106ac5760051b61088001518082018281106106ac5790509050610940518082018281106106ac579050905061094051600f81018181106106ac579050610460518110156106ac5760051b6104800151188160051b610480015260018101610460525061094051601181018181106106ac579050610460518110156106ac5760051b610480015161094051610460518110156106ac5760051b6104800151186106ac576001018181186100955750506000600f905b806109405261094051601181018181106106ac579050610460518110156106ac5760051b610480015161094051610460518110156106ac5760051b6104800151186106ac576001018181186101ad575050601061046051106106ac57600f60051b6104800151601161046051106106ac57601060051b61048001518082028115838383041417156106ac57905090506106ac57670b6ec7305a30b207601061046051106106ac57600f60051b6104800151601161046051106106ac57601060051b61048001518082018281106106ac5790509050186106ac57601161046051106106ac57601060051b6104800151601061046051106106ac57600f60051b610480015111156106ac57005b63f5961b6e81186106a557346106ac5760036040527f626164000000000000000000000000000000000000000000000000000000000060605260405060405180606001601f826000031636823750506308c379a06000526020602052601f19601f6040510116604401601cfd6106a5565b639b30d82481186106a557346106ac5760036040527f626164000000000000000000000000000000000000000000000000000000000060605260405060405180606001601f826000031636823750506308c379a06000526020602052601f19601f6040510116604401601cfd6106a5565b63bc9568b181186106a557346106ac5760036040527f626164000000000000000000000000000000000000000000000000000000000060605260405060405180606001601f826000031636823750506308c379a06000526020602052601f19601f6040510116604401601cfd6106a5565b63a89ac83c81186106a557346106ac5760036040527f626164000000000000000000000000000000000000000000000000000000000060605260405060405180606001601f826000031636823750506308c379a06000526020602052601f19601f6040510116604401601cfd6106a5565b636672f65a81186104e957346106ac5760036040527f626164000000000000000000000000000000000000000000000000000000000060605260405060405180606001601f826000031636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b63559b012681186106a557346106ac5760036040527f626164000000000000000000000000000000000000000000000000000000000060605260405060405180606001601f826000031636823750506308c379a06000526020602052601f19601f6040510116604401601cfd6106a5565b63819ae50981186105c757346106ac5760036040527f626164000000000000000000000000000000000000000000000000000000000060605260405060405180606001601f826000031636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b6318a3fc4981186106a557346106ac5760036040527f626164000000000000000000000000000000000000000000000000000000000060605260405060405180606001601f826000031636823750506308c379a06000526020602052601f19601f6040510116604401601cfd6106a5565b6386a2951f81186106a557346106ac5760036040527f626164000000000000000000000000000000000000000000000000000000000060605260405060405180606001601f826000031636823750506308c379a06000526020602052601f19601f6040510116604401601cfd5b346106ac57005b600080fd040b06a506a506a506a5055a047c06a50329039a001a0638841906c981181800a16576797065728300030a0015";

      address addr;
      assembly {
        addr := create(0, add(data, 32), mload(data))
      }

      (bool success,) = addr.call(code);
      assert(success);
      solved = true;
    }
}